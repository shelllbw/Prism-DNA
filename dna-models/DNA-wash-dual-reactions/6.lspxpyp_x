// DNA Stack model

ctmc

// Parameters for stochastic rate constants
const double k_a = 0.2214e-5; 
const double k_bc = 0.2214e-5; 
const int N = 271;
const double Inv = 27100/N;


// Species start
module s
s : [0..N] init 0;
endmodule


// Species linker - start
module ls
ls : [0..N] init 0;
// Reactant
endmodule


// Species push
module p 
p : [0..N] init 0; 
// Reactant
[p_x] p > 0 -> p*Inv : (p'=p-1);
[lspxpypx_p] p > 0 -> p*Inv : (p'=p-1);
endmodule


// Species linker - start - push
module lsp 
lsp : [0..N] init 0;
endmodule


// Species sigma polymer
module SG 
SG : [0..N] init 0;
// Production
[p_x] SG < N -> 1 : (SG'=SG+1);
endmodule


// Species dataX
module x
x : [0..N] init 0; 
// Reactant
[lspxpyp_x] x > 0 -> x*Inv : (x'=x-1);
[p_x] x > 0 -> x*Inv : (x'=x-1);
endmodule


// Species linker - start - push - dataX
module lspx
lspx : [0..N] init 0;
endmodule


// Species linker - start - push - dataX - push
module lspxp
lspxp : [0..N] init 0;
endmodule


// Species dataY
module y
y : [0..N] init 0; 
endmodule


// Species linker - start - push - dataX - push - dataY
module lspxpy
lspxpy : [0..N] init 0;
endmodule


// Species linker - start - push - dataX - push - dataY
module lspxpyp
lspxpyp : [0..N] init 0;
// Production
[lspxpyp_x] lspxpyp > 0 -> lspxpyp*Inv : (lspxpyp'=lspxpyp-1);
endmodule


// Species linker - start - push - dataX - push - dataY
module lspxpypx
lspxpypx : [0..N] init 0;
// Reactant
[lspxpypx_p] lspxpypx > 0 -> lspxpypx*Inv : (lspxpypx'=lspxpypx-1);
// Production
[lspxpyp_x] lspxpypx < N -> 1 : (lspxpypx'=lspxpypx+1);
endmodule


// Reaction rates
module reaction_rates
[lspxpyp_x] lspxpyp*x > 0 -> k_a / Inv : true;
[p_x] x*p > 0 -> k_a / Inv : true;
[lspxpypx_p] lspxpypx*p > 0 -> k_a / Inv : true;
endmodule

