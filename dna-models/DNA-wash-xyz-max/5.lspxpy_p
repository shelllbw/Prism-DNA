// DNA Stack model

ctmc

// Parameters for stochastic rate constants
const double k_a = 0.2214e-5; 
const double k_bc = 0.2214e-5; 
const int N = 200;
const double Inv = 27100/N;


// Species start
module s
s : [0..N] init 0;
endmodule


// Species linker - start
module ls
ls : [0..N] init 0;
// Reactant
endmodule


// Species push
module p 
p : [0..N] init 0; 
// Reactant
[lspxpy_p] p > 0 -> p*Inv : (p'=p-1);
endmodule


// Species linker - start - push
module lsp 
lsp : [0..N] init 0;
endmodule


// Species dataX
module x
x : [0..N] init 0; 
endmodule


// Species linker - start - push - dataX
module lspx
lspx : [0..N] init 0;
endmodule


// Species linker - start - sigma polymer
module lsSG
lsSG : [0..N] init 0;
endmodule


// Species push-sigma polymer 
module pSG 
pSG : [0..N] init 0;
endmodule


// Species data-sigma polymer
module wSG 
wSG : [0..N] init 0;
endmodule


// Species linker - start - push - dataX - push
module lspxp
lspxp : [0..N] init 0;
endmodule


// Species dataY
module y
y : [0..N] init 0; 
endmodule


// Species linker - start - push - dataX - push - dataY
module lspxpy
lspxpy : [0..N] init 0;
// Reactant
[lspxpy_p] lspxpy > 0 -> lspxpy*Inv : (lspxpy'=lspxpy-1);
endmodule


// Species linker - start - push - dataX - push - dataY - push
module lspxpyp
lspxpyp : [0..N] init 0;
[lspxpy_p] lspxpyp < N -> 1 : (lspxpyp'=lspxpyp+1);
endmodule

// Reaction rates
module reaction_rates
[lspxpy_p] lspxpy*p>0 -> k_bc / Inv : true;
endmodule

