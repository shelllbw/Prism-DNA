// DNA Stack model

ctmc

// Parameters for stochastic rate constants
const double k_a = 0.2222e-5; 
const double k_bc = 0.2222e-5; 
const int N = 500;
const double Inv = 27100/N;

// Species linker - start
module ls

ls : [0..N] init 0;
[lsp_q] ls < N -> 1 : (ls'=ls+1);
endmodule

// Species push
module p 

p : [0..N] init 0; 

endmodule


// Species linker - start - push
module lsp 

lsp : [0..N] init 0;
[lsp_q] lsp > 0 -> lsp*Inv : (lsp'=lsp - 1);

endmodule

// Species dataX
module x

x : [0..N] init 0; 

endmodule

// Species linker - start - push - dataX
module lspx

lspx : [0..N] init 0;
[lspxp_q] lspx < N -> 1 : (lspx'=lspx+1);
endmodule


// Species linker - start - push - dataX -push
module lspxp

lspxp : [0..N] init 0;
[lspxp_q] lspxp > 0 -> lspxp*Inv : (lspxp'=lspxp - 1);

endmodule

// Species dataY
module y

y : [0..N] init 0; 

endmodule

// Species linker - start - push - dataX -push
module lspy

lspy: [0..N] init 0;

endmodule

// Species linker - start - push - dataX -push
module lspxpy

lspxpy: [0..N] init 0;

endmodule

// Species read
module r

r : [0..N] init 0;

endmodule

// Species read-dataX
module rx

rx: [0..N] init 0;

endmodule

// Species read-dataY
module ry

ry: [0..N] init 0;

endmodule

// Species pop
module q

q: [0..N] init 0;
[lspxp_q] q > 0 -> q*Inv : (q'=q-1);
[lsp_q] q > 0 -> q*Inv : (q'=q-1);

endmodule

// Species push-pop
module pq

pq: [0..N] init 0;
[lspxp_q] pq < N -> 1 : (pq'=pq+1);
[lsp_q] pq < N -> 1 : (pq'=pq+1);

endmodule

// Reaction rates
module reaction_rates

// forwards
[lspxp_q] lspxp*q > 0 -> k_a / Inv : true;
[lsp_q] lsp*q > 0 -> k_a / Inv : true;

endmodule


