// DNA Stack model

ctmc

// Parameters for stochastic rate constants
const double k_a = 0.2222e-5; 
const double k_bc = 0.2222e-5; 
const int N = 30;
const double Inv = 18000/N;

// Species linker - start
module ls

ls : [0..N] init 0;

endmodule

// Species push
module p 

p : [0..N] init 0; 

endmodule


// Species linker - start - push
module lsp 

lsp : [0..N] init 0;
[lsp_y] lsp > 0 -> lsp*Inv : (lsp'=lsp - 1);

endmodule

// Species dataX
module x

x : [0..N] init 0; 

endmodule

// Species linker - start - push - dataX
module lspx

lspx : [0..N] init 0;

endmodule


// Species linker - start - push - dataX -push
module lspxp

lspxp : [0..N] init 0;
[lspxp_y] lspxp > 0 -> lspxp*Inv : (lspxp'=lspxp - 1);

endmodule

// Species dataY
module y

y : [0..N] init 0; 
[lspxp_y] y > 0 -> y*Inv: (y'=y-1);
[lsp_y] y > 0 -> y*Inv: (y'=y-1);

endmodule

// Species linker - start - push - dataX -push
module lspy

lspy: [0..N] init 0;
[lsp_y] lspy < N -> 1 : (lspy'=lspy + 1);

endmodule

// Species linker - start - push - dataX -push
module lspxpy

lspxpy: [0..N] init 0;
[lspxp_y] lspxpy < N -> 1 : (lspxpy'=lspxpy + 1);

endmodule

// Reaction rates
module reaction_rates

// forwards
[lspxp_y] lspxp*y > 0 -> k_a / Inv : true;
[lsp_y] lsp*y > 0 -> k_a / Inv : true;

endmodule


